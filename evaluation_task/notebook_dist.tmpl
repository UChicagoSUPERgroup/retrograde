{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": SECTION_1_TEXT
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": SECTION_2_TEXT
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": SECTION_3_TEXT
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": SECTION_4_TEXT
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>race</th>\n",
       "      <th>gender</th>\n",
       "      <th>date</th>\n",
       "      <th>fed</th>\n",
       "      <th>zip</th>\n",
       "      <th>income</th>\n",
       "      <th>type</th>\n",
       "      <th>interest</th>\n",
       "      <th>term</th>\n",
       "      <th>principal</th>\n",
       "      <th>approved</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>black</td>\n",
       "      <td>female</td>\n",
       "      <td>2017-10-01</td>\n",
       "      <td>1.15</td>\n",
       "      <td>60637</td>\n",
       "      <td>21155</td>\n",
       "      <td>personal</td>\n",
       "      <td>10.195762</td>\n",
       "      <td>12</td>\n",
       "      <td>44622</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>black</td>\n",
       "      <td>male</td>\n",
       "      <td>2018-04-01</td>\n",
       "      <td>1.69</td>\n",
       "      <td>60623</td>\n",
       "      <td>58431</td>\n",
       "      <td>home</td>\n",
       "      <td>NaN</td>\n",
       "      <td>180</td>\n",
       "      <td>519375</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>black</td>\n",
       "      <td>female</td>\n",
       "      <td>2013-11-01</td>\n",
       "      <td>0.08</td>\n",
       "      <td>60637</td>\n",
       "      <td>28489</td>\n",
       "      <td>home</td>\n",
       "      <td>8.780219</td>\n",
       "      <td>360</td>\n",
       "      <td>265714</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>black</td>\n",
       "      <td>male</td>\n",
       "      <td>2011-10-01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>60626</td>\n",
       "      <td>122782</td>\n",
       "      <td>home</td>\n",
       "      <td>1.915670</td>\n",
       "      <td>360</td>\n",
       "      <td>917704</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>white</td>\n",
       "      <td>female</td>\n",
       "      <td>2014-07-01</td>\n",
       "      <td>0.09</td>\n",
       "      <td>60614</td>\n",
       "      <td>324243</td>\n",
       "      <td>home</td>\n",
       "      <td>3.680747</td>\n",
       "      <td>300</td>\n",
       "      <td>1728441</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0   race  gender        date   fed    zip  income      type  \\\n",
       "0           0  black  female  2017-10-01  1.15  60637   21155  personal   \n",
       "1           1  black    male  2018-04-01  1.69  60623   58431      home   \n",
       "2           2  black  female  2013-11-01  0.08  60637   28489      home   \n",
       "3           3  black    male  2011-10-01  0.07  60626  122782      home   \n",
       "4           4  white  female  2014-07-01  0.09  60614  324243      home   \n",
       "\n",
       "    interest  term  principal  approved  \n",
       "0  10.195762    12      44622      True  \n",
       "1        NaN   180     519375     False  \n",
       "2   8.780219   360     265714      True  \n",
       "3   1.915670   360     917704      True  \n",
       "4   3.680747   300    1728441      True  "
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# import pandas \n\n",
    "import pandas as pd\n",
    "\n",
    "# load dataframe and print first 5 rows\n\n",
    "loans = pd.read_csv(\"loan_data.csv\")\n",
    "loans.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": SECTION_5_TEXT
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.511"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# calculating the percent of approved loans\n\n",
    "sum(loans[\"approved\"])/len(loans[\"approved\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": SECTION_6_TEXT
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "14943.0 353479.25\n"
     ]
    }
   ],
   "source": [
    "# 25th and 75th percentile\n\n",
    "print(loans[\"principal\"].quantile(0.25), loans[\"principal\"].quantile(0.75))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": SECTION_7_TEXT
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['personal', 'home', 'auto'], dtype=object)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#get unique loan types\n",
    "loans[\"type\"].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": SECTION_10_TEXT
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>type</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>auto</th>\n",
       "      <td>0.348</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>home</th>\n",
       "      <td>0.370</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>personal</th>\n",
       "      <td>0.282</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          count\n",
       "type           \n",
       "auto      0.348\n",
       "home      0.370\n",
       "personal  0.282"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# percent of each type of loan\n",
    "\n",
    "pct_df = pd.DataFrame({\"type\" : loans[\"type\"], \"count\" : [1 for _ in loans[\"type\"]]})\n",
    "pct_df.groupby([\"type\"]).sum()/len(loans[\"type\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": SECTION_11_TEXT
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "loans[\"date\"] = pd.to_datetime(loans[\"date\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": SECTION_12_TEXT
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "627"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from datetime import datetime\n",
    "\n",
    "sum(loans[\"date\"] >= datetime(month=1, day=1, year=2015))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": SECTION_13_TEXT
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>race</th>\n",
       "      <th>gender</th>\n",
       "      <th>date</th>\n",
       "      <th>fed</th>\n",
       "      <th>zip</th>\n",
       "      <th>income</th>\n",
       "      <th>interest</th>\n",
       "      <th>term</th>\n",
       "      <th>principal</th>\n",
       "      <th>approved</th>\n",
       "      <th>type_home</th>\n",
       "      <th>type_personal</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>black</td>\n",
       "      <td>female</td>\n",
       "      <td>2017-10-01</td>\n",
       "      <td>1.15</td>\n",
       "      <td>60637</td>\n",
       "      <td>21155</td>\n",
       "      <td>10.195762</td>\n",
       "      <td>12</td>\n",
       "      <td>44622</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>black</td>\n",
       "      <td>male</td>\n",
       "      <td>2018-04-01</td>\n",
       "      <td>1.69</td>\n",
       "      <td>60623</td>\n",
       "      <td>58431</td>\n",
       "      <td>NaN</td>\n",
       "      <td>180</td>\n",
       "      <td>519375</td>\n",
       "      <td>False</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>black</td>\n",
       "      <td>female</td>\n",
       "      <td>2013-11-01</td>\n",
       "      <td>0.08</td>\n",
       "      <td>60637</td>\n",
       "      <td>28489</td>\n",
       "      <td>8.780219</td>\n",
       "      <td>360</td>\n",
       "      <td>265714</td>\n",
       "      <td>True</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>black</td>\n",
       "      <td>male</td>\n",
       "      <td>2011-10-01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>60626</td>\n",
       "      <td>122782</td>\n",
       "      <td>1.915670</td>\n",
       "      <td>360</td>\n",
       "      <td>917704</td>\n",
       "      <td>True</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>white</td>\n",
       "      <td>female</td>\n",
       "      <td>2014-07-01</td>\n",
       "      <td>0.09</td>\n",
       "      <td>60614</td>\n",
       "      <td>324243</td>\n",
       "      <td>3.680747</td>\n",
       "      <td>300</td>\n",
       "      <td>1728441</td>\n",
       "      <td>True</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0   race  gender        date   fed    zip  income   interest  \\\n",
       "0           0  black  female  2017-10-01  1.15  60637   21155  10.195762   \n",
       "1           1  black    male  2018-04-01  1.69  60623   58431        NaN   \n",
       "2           2  black  female  2013-11-01  0.08  60637   28489   8.780219   \n",
       "3           3  black    male  2011-10-01  0.07  60626  122782   1.915670   \n",
       "4           4  white  female  2014-07-01  0.09  60614  324243   3.680747   \n",
       "\n",
       "   term  principal  approved  type_home  type_personal  \n",
       "0    12      44622      True          0              1  \n",
       "1   180     519375     False          1              0  \n",
       "2   360     265714      True          1              0  \n",
       "3   360     917704      True          1              0  \n",
       "4   300    1728441      True          1              0  "
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "coded_cols = pd.get_dummies(loans[\"type\"], prefix=\"type\", drop_first=True)\n",
    "encoded_loans = pd.concat([loans, coded_cols], axis=1)\n",
    "loans = encoded_loans.drop([\"type\"], axis=1)\n",
    "loans.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": SECTION_14_TEXT
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "877"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_dropped = loans.dropna()\n",
    "len(all_dropped)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": SECTION_15_TEXT
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Unnamed: 0', 'race', 'gender', 'date', 'fed', 'zip', 'income', 'term',\n",
       "       'principal', 'approved', 'type__home', 'type__personal'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cols_dropped = loans.dropna(axis=\"columns\")\n",
    "cols_dropped.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": SECTION_16_TEXT
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    10.195762\n",
       "1     0.000000\n",
       "2     8.780219\n",
       "3     1.915670\n",
       "4     3.680747\n",
       "Name: interest, dtype: float64"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "filled_interest = loans[\"interest\"].fillna(0.0)\n",
    "filled_interest.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": SECTION_17_TEXT
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": SECTION_18_TEXT
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": SECTION_19_TEXT
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "# %prompter_plugin model_training%"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": SECTION_20_TEXT
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": SECTION_21_TEXT
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.518"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "\n",
    "X = loans[[\"type_home\", \"type_personal\", \"income\", \"principal\"]]\n",
    "\n",
    "y = loans[\"approved\"]\n",
    "\n",
    "lr = LogisticRegression()\n",
    "lr.fit(X,y)\n",
    "\n",
    "lr.score(X, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": SECTION_22_TEXT
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": SECTION_23_TEXT
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": SECTION_24_TEXT
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# %prompter_plugin submit%"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
